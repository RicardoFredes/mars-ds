const WARNING = `/**
 * WARNING!
 * Do NOT edit this file as it is automatically generated
 * run "yarn generate:icons" to update
 */\n`;

const { getFiles, readFile, saveFile } = require("./helpers/files");
const { kebabCaseToPascalCase } = require("./helpers/convert-names");

const ICONS_FOLDER = "./src/libs/icons";
const REACT_FOLDER = `${ICONS_FOLDER}/react`;

const FEATHER_SVG_FOLDER = `${ICONS_FOLDER}/svg/feather`;
const INTERNALS_SVG_FOLDER = `${ICONS_FOLDER}/svg/internals`;
const SVG_FOLDERS = [FEATHER_SVG_FOLDER, INTERNALS_SVG_FOLDER];

function main() {
  const filesList = SVG_FOLDERS.reduce((acc, list) => [...acc, ...getFiles(list)], []);

  for (const file of filesList) {
    svgToReact(file);
  }
}

function svgToReact(svgPath = "") {
  const name = svgPath
    .split("/")
    .pop()
    .replace(/\.svg$/, "");
  const componentName = `Icon${kebabCaseToPascalCase(name)}`;

  const svg = readFile(svgPath)
    .replace(/width=".*"/, "width={width}")
    .replace(/height=".*"/, "height={height}");
  const reactComponent = `${WARNING}
  
import type { IconLibProps } from "@/libs/icons/icons.types";

const ${componentName} = ({ height = 24, width = 24 }: IconLibProps) => (
${svg});
  
export default ${componentName};`;

  saveFile(REACT_FOLDER, `${name}.tsx`, reactComponent);
}

main();
